"""add unique constraint to user email

Revision ID: a440eb3310a5
Revises: 3a95d65ab7e1
Create Date: 2025-08-02 15:03:29.975083

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a440eb3310a5'
down_revision = '3a95d65ab7e1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('account_mappers', 'account_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('account_mappers', 'source_file_type',
               existing_type=postgresql.ENUM('CSV', 'XLS', 'XLSX', name='sourcefiletype'),
               nullable=False)
    op.alter_column('account_mappers', 'source_file_schema',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('accounts', 'alias',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('accounts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('accounts', 'currency',
               existing_type=postgresql.ENUM('EUR', 'BRL', name='currencytype'),
               nullable=False)
    op.alter_column('assets', 'isin',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('assets', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('assets', 'currency',
               existing_type=sa.TEXT(),
               type_=sa.Enum('EUR', 'BRL', name='currencytype'),
               nullable=False)
    op.alter_column('assets', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('split_transactions', 'transaction_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('split_transactions', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('split_transactions', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('split_transactions', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('split_transactions_tag_id_fkey'), 'split_transactions', type_='foreignkey')
    op.create_foreign_key(None, 'split_transactions', 'tags', ['tag_id'], ['id'])
    op.alter_column('tags', 'value',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('tags', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('transaction_assets', 'asset_isin',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('transactions', 'date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('transactions', 'type',
               existing_type=postgresql.ENUM('EXPENSE', 'INCOME', 'TRANSFER', 'REFUND', 'INVESTMENT', 'IOU', name='transactiontype'),
               nullable=False)
    op.alter_column('transactions', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('transactions', 'account_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('transactions', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('transactions', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('users', 'currency',
               existing_type=postgresql.ENUM('EUR', 'BRL', name='currencytype'),
               nullable=False)
    op.create_unique_constraint(None, 'users', ['email'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'currency',
               existing_type=postgresql.ENUM('EUR', 'BRL', name='currencytype'),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('transactions', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('transactions', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('transactions', 'account_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('transactions', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('transactions', 'type',
               existing_type=postgresql.ENUM('EXPENSE', 'INCOME', 'TRANSFER', 'REFUND', 'INVESTMENT', 'IOU', name='transactiontype'),
               nullable=True)
    op.alter_column('transactions', 'date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('transaction_assets', 'asset_isin',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('tags', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('tags', 'value',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.drop_constraint(None, 'split_transactions', type_='foreignkey')
    op.create_foreign_key(op.f('split_transactions_tag_id_fkey'), 'split_transactions', 'tags', ['tag_id'], ['id'], onupdate='CASCADE')
    op.alter_column('split_transactions', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('split_transactions', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('split_transactions', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('split_transactions', 'transaction_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('assets', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('assets', 'currency',
               existing_type=sa.Enum('EUR', 'BRL', name='currencytype'),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('assets', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('assets', 'isin',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('accounts', 'currency',
               existing_type=postgresql.ENUM('EUR', 'BRL', name='currencytype'),
               nullable=True)
    op.alter_column('accounts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('accounts', 'alias',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('account_mappers', 'source_file_schema',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('account_mappers', 'source_file_type',
               existing_type=postgresql.ENUM('CSV', 'XLS', 'XLSX', name='sourcefiletype'),
               nullable=True)
    op.alter_column('account_mappers', 'account_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
